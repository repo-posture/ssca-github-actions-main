name: Workflow for SBOM Generation and Verification, SLSA Generation and Verification

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  combined-workflow:
    runs-on: ubuntu-latest
    

    steps:
      # Step 1: Checkout the main repository
      - name: Checkout Main Repository.
        uses: actions/checkout@v3

      # Step 2: Clone Additional Repository
      - name: Clone Additional Repository1.
        run: |
          git clone https://github.com/lavakush07/easybuggy-vulnerable-application
          echo "Cloned additional repository: docker-nginx latest"
      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set Vault Environment Variables
        run: |
          echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> $GITHUB_ENV
          echo "DOCKER_PASSWORD=${{ secrets.DOCKER_PASSWORD }}" >> $GITHUB_ENV
      # # Step 4: Build and Tag Docker Image
      - name: Build and Tag Docker Image
        run: |
          cd easybuggy-vulnerable-application
          docker build -t ${{ secrets.DOCKER_USERNAME }}/easy-buggy-app:demo1 .
          echo "Docker image built and tagged as ${{ secrets.DOCKER_USERNAME }}/easy-buggy-app:demo1"
      # # Step 5: Push the Docker Image to Docker Hub
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/easy-buggy-app:demo1
          echo "Docker image pushed to Docker Hub"
      # Step 6: Log in to Vault
      - name: Log in to Vault
        uses: hashicorp/vault-action@v2
        id: vault_login
        with:
          url: ${{ secrets.VAULT_URL }}
          method: token
          token: ${{ secrets.VAULT_TOKEN }}

      # Step 7: Set Vault Environment Variables
      # Ensuring token is accessible

      # Step 9: Set Vault Environment Variables
      - name: Set Vault Environment Variables
        run: |
          echo "VAULT_ADDR=${{ secrets.VAULT_URL }}" >> $GITHUB_ENV
          echo "VAULT_TOKEN=${{ secrets.VAULT_TOKEN }}" >> $GITHUB_ENV
      # Step 10: Run SBOM Generation Action

      - name: SBOM Generation
        uses: harness/github-actions/sbom-generation@1.1.0
        with:
          HARNESS_ACCOUNT_URL: https://app.harness.io
          HARNESS_ACCOUNT_ID: vpCkHKsDSxK9_KYfjCTMKA
          HARNESS_ORG_ID: SSCA
          HARNESS_PROJECT_ID: Exploratory
          HARNESS_API_KEY: ${{ secrets.SCS_API_KEY }}
          TARGET: lavakush07/easy-buggy-app:demo1
          TOOL: Syft
          FORMAT: spdx-json
          ATTEST: true
          KMS_KEY: 'cosign'
    

          
    # Step 11: Run SBOM Verification Action
    
      -  name: SBOM Verification
         uses: harness/github-actions/sbom-policy-enforcement@1.1.0
         with:
           HARNESS_ACCOUNT_URL: https://app.harness.io
           HARNESS_ACCOUNT_ID: vpCkHKsDSxK9_KYfjCTMKA
           HARNESS_ORG_ID: SSCA
           HARNESS_PROJECT_ID: Exploratory
           HARNESS_API_KEY: ${{ secrets.SCS_API_KEY }}
           TARGET: lavakush07/easy-buggy-app:demo1
           VERIFY: true
           POLICY_SET_REF: 'policy_for_at'
           KMS_KEY: 'cosign'

     # Step 11: Run SLSA Generation Action

      -  name: SLSA Provenance Generation
         uses: harness/github-actions/slsa-generation@1.1.0
         with:
           HARNESS_ACCOUNT_URL: https://app.harness.io
           HARNESS_ACCOUNT_ID: vpCkHKsDSxK9_KYfjCTMKA
           HARNESS_ORG_ID: SSCA
           HARNESS_PROJECT_ID: Exploratory
           HARNESS_API_KEY: ${{ secrets.SCS_API_KEY }}
           TARGET: lavakush07/easy-buggy-app:demo1
           ATTEST: true
           KMS_KEY: 'cosign'  
  
      # Step 12: Run SLSA Verification Action

      - name: SLSA Verification
        uses: harness/github-actions/slsa-verification@1.1.0
        with:
          HARNESS_ACCOUNT_URL: https://app.harness.io
          HARNESS_ACCOUNT_ID: vpCkHKsDSxK9_KYfjCTMKA
          HARNESS_ORG_ID: SSCA
          HARNESS_PROJECT_ID: Exploratory
          HARNESS_API_KEY: ${{ secrets.SCS_API_KEY }}
          TARGET: lavakush07/easy-buggy-app:demo1
          VERIFY: true
          KMS_KEY: 'cosign'   